<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>怀府小阁</title>
    <link>http://blog.huaifufeng.com/</link>
    <description>Recent content on 怀府小阁</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.huaifufeng.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang学习（一）</title>
      <link>http://blog.huaifufeng.com/2019/01/post/go-learn-1.html</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.huaifufeng.com/2019/01/post/go-learn-1.html</guid>
      <description>作为一个PHP程序员，最近因为兴趣和业务的需要(学习了一个东西，如果不使用的话，忘记的速度会非常快)，开始接触golang这门语言，这里做下学习的笔记，这里是学习的第一步，简单介绍一下golang的一些基本信息。
简介 golang是一门谷歌开发并开源的类c语言，是一门静态、编译型语言。该语言起源于2007年，于2009年正式的发布，目前在TIBOE中排行到19位。在各个地区尤其是国内拥有大量的使用，包括京东，七牛，B站等都有使用。
保留了C++的大部分语法，移除了其中指针运算，运算符重载等特性，增加了GC等新特性，拥有不输于C++的性能，被认为更加安全，高效。</description>
    </item>
    
    <item>
      <title>Golang学习（一）</title>
      <link>http://blog.huaifufeng.com/2019/01/post/go-learn-1.html</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.huaifufeng.com/2019/01/post/go-learn-1.html</guid>
      <description>作为一个PHP程序员，最近因为兴趣和业务的需要(学习了一个东西，如果不使用的话，忘记的速度会非常快)，开始接触golang这门语言，这里做下学习的笔记，这里是学习的第一步，简单介绍一下golang的一些基本信息。
简介 golang是一门谷歌开发并开源的类c语言，是一门静态、编译型语言。该语言起源于2007年，于2009年正式的发布，目前在TIBOE中排行到19位。在各个地区尤其是国内拥有大量的使用，包括京东，七牛，B站等都有使用。
保留了C++的大部分语法，移除了其中指针运算，运算符重载等特性，增加了GC等新特性，拥有不输于C++的性能，被认为更加安全，高效。</description>
    </item>
    
    <item>
      <title>Hugo&#43;GitHub搭建自己的blog</title>
      <link>http://blog.huaifufeng.com/2019/01/post/hugo-first.html</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>http://blog.huaifufeng.com/2019/01/post/hugo-first.html</guid>
      <description>2019年新的开始，新年第一天的首个工作就是把blog搭了起来，之后就要坚持做下去了，保证一周能有一篇有货的文章，这个也是给自己提的一个邀请，每周要学习至少一个知识点，可以分享的知识点。
这个blog是用hugo搭建的，因为最近在学习go语言，所以就挑选了这个以go语音实现的静态网站生成工具，在以后就要看下hugo的源码了，希望能够学习并升级这个工具。下面就介绍一下hugo+github搭建自己的blog。
环境搭建 这里涉及到两个环境的配置Hugo静态网站生成器和GitHub代码托管网站的配置，下面分别介绍两个环境的配置过程。
Hugo环境搭建 Hugo是一个用golang语言实现的一个静态网站生成器，不只是用来生成blog，还可以用来生成商城，信息网站等。它最主要的特性就是快，安全。这里就介绍下安装方法。
Hugo支持目前市面上的操作系统，包括：Mac，Windows，Linux，OpenBSD，FreeBSD。我这里用的Mac电脑，就介绍下Mac的安装，其他的环境可以到Hugo安装页面查看相应的安装步骤。
1、首先确定你的电脑是否安装有Homebrew，这是一个mac的安装包管理工具，可以用来安装软件。
brew --version  如果输出了版本号，说明你的电脑已经安装了这个软件，否则就需要执行下面的命令进行安装。
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;  然后重新输入上面的命令进行安装。
2、使用Homebrew安装Hugo
brew install hugo  安装完毕之后使用下面的命令验证：
hugo version  获取到版本号说明安装成功。
3、然后就可以使用过hugo的命令来生成网站，生成页面了。
首先生成网址，先到达你存放网站信息的地方，使用下面的命令生成网站的根目录文件夹example(替换为你自己的项目目录)：
hugo new site example  生成网站的目录结构如下：
. ├── archetypes ├── assets ├── config.toml //网站的配置文件 ├── content //网站内容的原始文件 ├── data ├── layouts ├── static └── themes //网站的模板文件  其他的我们暂时不关心，目前用到的是content，themes，config.toml
首先需要把我们的项目变成一个git项目，才可以进行下面的操作：
git init git add . git commit -m &#39;init&#39;  Hugo目前已经有了一批的模板，只需要到这个地址，就可以找到需要的模板了，我这个blog就是从中使用的模板。使用下面的命令就可以把一个模板下载到本地：</description>
    </item>
    
  </channel>
</rss>